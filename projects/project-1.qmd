---
title: "Flappy"
date: "2024-09-15"
categories: [GitHub, Vercel, Claude Code]
---

## Overview

This project involved using Claude Code to write the code to needed to deveop an app that provided a fun but challenging take on the classic flappy bird game. Developing this game taught me the power of AI coding tools and increased my confidence in my ability to use them with precision.

###The primary purpose of this app is to:

- challenge players to acheive a high score by skillfully navigating through an endless series of randomly generated obstacles.
- provide a simple and challenging arcade expereience with responsive controls with a rewarding, score based progression system. 

## Live Product Demo

<div class="d-flex justify-content-center gap-3 my-4">
  <!-- Open App button -->
  <a class="btn btn-primary d-inline-flex align-items-center"
     href="https://flappy-amber-sigma.vercel.app/"
     target="_blank" rel="noopener"
     aria-label="Open live app">
    <i class="fa-solid fa-window-restore me-2" aria-hidden="true"></i>
    Open App in New Tab
  </a>

  <!-- GitHub Source button -->
  <a class="btn btn-outline-dark d-inline-flex align-items-center"
     href="https://github.com/KDahl007/first-shared-app"
     target="_blank" rel="noopener"
     aria-label="Open GitHub source">
    <i class="fa-brands fa-github me-2" aria-hidden="true"></i>
    View source on GitHub
  </a>
</div>

<iframe src="https://flappy-amber-sigma.vercel.app/"
        style="width:100%; height:900px; border:none;"
        allowfullscreen>
</iframe>

## Technical Details

Framework/Stack: HTML/CSS/JS

Deployment: GitHub Pages + Vercel

Tools Used: Claude Code

## Product Requirements Document

1. Introduction

1.1. Overview

"Flappy" is a 2D side-scrolling mobile and web game. The primary objective is to navigate a character (the "Bird") through a series of obstacles, represented by vertical pipes, for as long as possible. The game is designed to be simple, challenging, and highly addictive.

1.2. Target Audience

The target audience includes casual gamers of all ages who enjoy simple, high-score-based arcade games.

2. Product Goals

Goal 1: Create a fun and engaging single-player game with a clear and simple objective.

Goal 2: Implement a challenging gameplay loop that encourages repeat plays.

Goal 3: Provide a seamless and responsive user experience on both desktop and mobile devices.

3. Core Gameplay Loop

3.1. Game State

The game will have three primary states:

Main Menu: Displays the game title, a "Start" button, and the user's high score.

In-Game: The active gameplay state where the user controls the Bird.

Game Over: Displays the final score, the high score, and "Restart" and "Main Menu" buttons.

3.2. Player Mechanics

Character: A small, pixelated bird or similar flying character.

Movement: The Bird will have a constant horizontal velocity of 5 units/frame, moving from left to right across the screen.

Gravity: The Bird will be subject to a constant downward acceleration of 1.5 units/frame.

Jump: A single tap or click on the screen will apply an upward velocity impulse of -20 units. This is the only player input.

3.3. Obstacles (Pipes)

Generation: Pipes will be generated in pairs (top and bottom) with a vertical gap between them.

Movement: Pipes will move horizontally from right to left at a constant speed, synchronized with the Bird's forward movement.

Spacing: Pipes will be spaced 250 units apart horizontally. The vertical gap will be 150 units wide, and its vertical position will be randomized, ensuring the top and bottom pipes are at least 50 units from the screen boundaries.

3.4. Scoring

The player gains one point for each set of pipes they successfully pass through the gap.

The score is displayed in the top-middle of the screen during gameplay.

3.5. Collision Detection

The game ends immediately if the Bird collides with any of the following:

The top, bottom or side of a pipe.

The bottom of the game screen (ground).

There is no ceiling

4. User Interface (UI) and Experience (UX)

4.1. Visuals

Art Style: Simple, retro pixel art to evoke a nostalgic feel.

Background: A scrolling background to provide a sense of continuous motion.

4.2. Main Menu

Title: "Flappy"

High Score: Displays the user's top 5 all time high scores

Button: A large, easily tappable "Start" button.

Username: A place to make a username that can be saved with the high scores

4.3. In-Game UI

Score: The current score is prominently displayed.

Pause Functionality: A small pause button in a corner.

4.4. Game Over Screen

Score Display: Shows the score from the last game and the all-time high score.

Buttons: "Restart" to begin a new game instantly and "Main Menu" to return to the home screen.

4.5. Sound and Visuals

Jump Sound Effect: A short, high-pitched "whoosh" or "boop" sound.

Score Sound Effect: A positive, bell-like "ding" sound.

Game Over Sound Effect: A distinct "thud" or "crash" sound.

Visual Effects: A subtle "squish" or "bounce" animation on the Bird for each jump.

5. Technical Requirements

Platform: A single-page web application compatible with modern web browsers on desktop and mobile.

Technology Stack: HTML, CSS, and JavaScript.

Rendering: All game visuals will be rendered using the HTML Canvas element for optimal performance.

Data Persistence: The high score will be stored persistently in a Firestore database to allow for multi-user functionality and leaderboards in future versions.

6. Further Considerations

Achievements: In-game achievements for reaching score milestones (e.g., "10 points," "50 points") and other specific actions (e.g., "First Game Played").

Leaderboards: A global leaderboard to compete with other players.

Customization: Unlockable character skins or different themes.